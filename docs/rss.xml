<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>ROBOT008-博客园</title><link>https://ROBOT008.github.io</link><description>by ROBOT007资源</description><copyright>ROBOT008-博客园</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIibpm7zAVd4z7xmHfHfm3ue1xwoOM8qcia94wGiaicTmnPlNTNjpxBOEjvNbBnjvt2tibiaA6xQmPTKelicTOT6kasRZhSv0AFiclJVfelfOFDHqibVcg/132</url><title>avatar</title><link>https://ROBOT008.github.io</link></image><lastBuildDate>Tue, 02 Jul 2024 07:42:31 +0000</lastBuildDate><managingEditor>ROBOT008-博客园</managingEditor><ttl>60</ttl><webMaster>ROBOT008-博客园</webMaster><item><title>docker安装nginx1.19.0</title><link>https://ROBOT008.github.io/post/docker-an-zhuang-nginx1.19.0.html</link><description>1. 登录阿里云获取个人仓库镜像源&#13;
2. 拉取nginx1.19.0镜像。</description><guid isPermaLink="true">https://ROBOT008.github.io/post/docker-an-zhuang-nginx1.19.0.html</guid><pubDate>Tue, 02 Jul 2024 07:42:03 +0000</pubDate></item><item><title>docker一键拉取镜像&amp;创建容器</title><link>https://ROBOT008.github.io/post/docker-yi-jian-la-qu-jing-xiang-%26-chuang-jian-rong-qi.html</link><description>1. 安装[docker环境](https://robot008.github.io/post/Centos-an-zhuang-docker.html)&#13;
2. 创建linux脚本（build${项目名称}.sh）&#13;
```&#13;
echo '-----stop and rm docker ---'&#13;
docker stop `docker ps -a |grep ${项目名称}| awk '{print $1}'`&#13;
sleep 3&#13;
echo '-----rm-----'&#13;
docker rm `docker ps -a |grep ${项目名称}| awk '{print $1}'`&#13;
sleep 3&#13;
echo '-----rmi ----'&#13;
docker rmi `docker images |grep ${项目名称}| awk '{print $3}'`&#13;
sleep 3&#13;
echo '-----pull docker images---'&#13;
docker pull registry.cn-hangzhou.aliyuncs.com/robot_007/${项目名称}:test&#13;
sleep 3&#13;
echo '-----start docker images---'&#13;
docker run --name nanzhujian_vm -p 8899:8080 -v /logs/${项目名称}/:/tmp/ -d registry.cn-hangzhou.aliyuncs.com/robot_007/${项目名称}:test&#13;
sleep 3&#13;
echo '-----start end ----'&#13;
docker ps  |grep ${项目名称}&#13;
echo '-----look logs'&#13;
docker logs -f  `docker ps -a |grep ${项目名称}| awk '{print $1}'`&#13;
```。</description><guid isPermaLink="true">https://ROBOT008.github.io/post/docker-yi-jian-la-qu-jing-xiang-%26-chuang-jian-rong-qi.html</guid><pubDate>Thu, 20 Jun 2024 07:06:54 +0000</pubDate></item><item><title>docker部署java项目</title><link>https://ROBOT008.github.io/post/docker-bu-shu-java-xiang-mu.html</link><description>1. 本地登录阿里云docker容器&#13;
```&#13;
docker login --username=1160468016@qq.com registry.cn-hangzhou.aliyuncs.com&#13;
```&#13;
2. 项目根目录创建Dockerfile&#13;
```&#13;
FROM openjdk:8-jdk-alpine&#13;
ADD target/${项目名称}.jar /app.jar&#13;
CMD ['java', '-jar', '/app.jar']&#13;
```&#13;
3. 编译项目（maven项目）&#13;
```&#13;
mvn install&#13;
```&#13;
4. 创建docker镜像&#13;
```&#13;
docker build -t registry.cn-hangzhou.aliyuncs.com/robot_007/${项目名称}:latest .&#13;
```&#13;
5. 提交docker到容器（例如：阿里云容器）&#13;
```&#13;
docker push registry.cn-hangzhou.aliyuncs.com/robot_007/${项目名称}:latest&#13;
```&#13;
6. 拉取镜像&#13;
```&#13;
docker pull registry.cn-hangzhou.aliyuncs.com/robot_007/${项目名称}&#13;
```&#13;
7. 创建并启动&#13;
```&#13;
docker run --name nanzhujian_vm -p 8899:8080 -v /logs/${项目名称}/:/tmp/ -d registry.cn-hangzhou.aliyuncs.com/robot_007/${项目名称}&#13;
```。</description><guid isPermaLink="true">https://ROBOT008.github.io/post/docker-bu-shu-java-xiang-mu.html</guid><pubDate>Thu, 20 Jun 2024 07:01:29 +0000</pubDate></item><item><title>docker安装mysql5.7</title><link>https://ROBOT008.github.io/post/docker-an-zhuang-mysql5.7.html</link><description>1. 登录阿里云获取个人仓库镜像源&#13;
2. 拉取Mysql5.7镜像&#13;
```&#13;
docker pull registry.cn-hangzhou.aliyuncs.com/robot_007/mysql:5.7&#13;
```&#13;
3. 创建仓库并启动&#13;
```&#13;
docker run --name mysql5.7 -p 3306:3306 -e MYSQL_ROOT_PASSWORD='root1234!@#' -v /root/docker/mysql/data:/var/lib/mysql -v /root/docker/mysql/conf:/etc/mysql/conf.d  -d registry.cn-hangzhou.aliyuncs.com/robot_007/mysql:5.7&#13;
```&#13;
4.进入容器并设置mysql远程登录&#13;
```&#13;
docker exec -it mysql5.7 bash&#13;
mysql -u root -p&#13;
GRANT ALL ON *.* TO 'root'@'%' IDENTIFIED BY 'root1234!@#' WITH GRANT OPTION;&#13;
FLUSH PRIVILEGES;&#13;
```。</description><guid isPermaLink="true">https://ROBOT008.github.io/post/docker-an-zhuang-mysql5.7.html</guid><pubDate>Thu, 20 Jun 2024 03:57:00 +0000</pubDate></item><item><title>docker安装sqlserver2019</title><link>https://ROBOT008.github.io/post/docker-an-zhuang-sqlserver2019.html</link><description>1. 登录阿里云获取个人仓库镜像源&#13;
2. 拉取sqlserver镜像&#13;
```&#13;
docker pull registry.cn-hangzhou.aliyuncs.com/robot_007/server:2019-latest&#13;
``` &#13;
3. 创建仓库并启动&#13;
```&#13;
docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=root1234!@#' -p 1433:1433 --name sqlserver2019 -d registry.cn-hangzhou.aliyuncs.com/robot_007/server:2019-latest&#13;
```&#13;
。</description><guid isPermaLink="true">https://ROBOT008.github.io/post/docker-an-zhuang-sqlserver2019.html</guid><pubDate>Thu, 20 Jun 2024 03:51:21 +0000</pubDate></item><item><title>docker安装portainer-ce</title><link>https://ROBOT008.github.io/post/docker-an-zhuang-portainer-ce.html</link><description>1. 登录阿里云获取个人仓库镜像源&#13;
2. 拉取Portainer-ce镜像&#13;
```&#13;
docker pull registry.cn-hangzhou.aliyuncs.com/robot_007/portainer-ce&#13;
```&#13;
3. 创建仓库并启动&#13;
```&#13;
docker run -d -p 8000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -e LANG=zh registry.cn-hangzhou.aliyuncs.com/robot_007/portainer-ce&#13;
```&#13;
![image](https://video007.oss-cn-shenzhen.aliyuncs.com/github/1.png)。</description><guid isPermaLink="true">https://ROBOT008.github.io/post/docker-an-zhuang-portainer-ce.html</guid><pubDate>Thu, 20 Jun 2024 03:38:30 +0000</pubDate></item><item><title>docker安装jenkins</title><link>https://ROBOT008.github.io/post/docker-an-zhuang-jenkins.html</link><description>1. 登录阿里云获取个人仓库镜像源&#13;
2. 拉取Jenkins镜像&#13;
```&#13;
docker pull registry.cn-hangzhou.aliyuncs.com/robot_007/jenkins:lts&#13;
```&#13;
3. 创建仓库并启动&#13;
```&#13;
docker run -d -p 8086:8080 -p 50000:50000 -v /root/docker/jenkins/data:/var/jenkins_home  -v /etc/localtime:/etc/localtime -v /usr/bin/docker:/usr/bin/docker     -v /var/run/docker.sock:/var/run/docker.sock   --restart=on-failure  -u 0 --name jenkins-lts registry.cn-hangzhou.aliyuncs.com/robot_007/jenkins:lts&#13;
```。</description><guid isPermaLink="true">https://ROBOT008.github.io/post/docker-an-zhuang-jenkins.html</guid><pubDate>Thu, 20 Jun 2024 03:27:51 +0000</pubDate></item><item><title>Centos安装docker</title><link>https://ROBOT008.github.io/post/Centos-an-zhuang-docker.html</link><description>1. 删除旧版及本地docker源&#13;
```&#13;
yum remove docker  docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate       &#13;
 docker-selinux docker-engine-selinux  docker-engine docker-ce&#13;
```&#13;
2. 安装环境&#13;
```&#13;
yum install -y yum-utils   device-mapper-persistent-data  lvm2 --skip-broken&#13;
```&#13;
3. 设置docker镜像源&#13;
```&#13;
yum-config-manager --add-repo  https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo&#13;
sed -i 's/download.docker.com/mirrors.aliyun.com\/docker-ce/g' /etc/yum.repos.d/docker-ce.repo&#13;
yum makecache&#13;
```&#13;
4. 安装docker&#13;
```&#13;
yum install -y docker-ce&#13;
```&#13;
5. 查看安装是否成功&#13;
```&#13;
docker images&#13;
```&#13;
6. 启动&amp;配置网关&#13;
```&#13;
systemctl stop firewalld # 禁止开机启动防火墙&#13;
systemctl disable firewalld&#13;
systemctl start docker  # 启动docker服务&#13;
systemctl stop docker  # 停止docker服务&#13;
systemctl restart docker  # 重启docker服务&#13;
```。</description><guid isPermaLink="true">https://ROBOT008.github.io/post/Centos-an-zhuang-docker.html</guid><pubDate>Thu, 20 Jun 2024 03:22:23 +0000</pubDate></item></channel></rss>